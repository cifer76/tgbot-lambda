# This is a basic workflow to help you get started with Actions

name: tgbot standalone

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ standalone ]
  pull_request:
    branches: [ standalone ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy_zip:
    name: deploy bot
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.16.x]
    steps:
      - name: checkout source code
        uses: actions/checkout@v1
      - name: install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: build binary
        run: |
          GOOS=linux go build -v -a -o tgbot && tar -jcvf tgbot.tar.bz2 tgbot dict/
      - name: deploy
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_DEPLOY_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "tgbot.tar.bz2"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: "/home/ubuntu/tgbot/"
      - name: restart
        run: |
          echo "${{ secrets.EC2_DEPLOY_PRIVATE_KEY }}" > /tmp/key
          chmod 0600 /tmp/key
          ssh -i /tmp/key ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "tar -jxf /home/ubuntu/tgbot/tgbot.tar.bz2 -C /home/ubuntu/tgbot"
          ssh -i /tmp/key ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sudo systemctl daemon-reload && sudo systemctl restart tgbot"
